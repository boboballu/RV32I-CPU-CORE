# vsim -do "do wave.do;" "+test=1" valid_ready_tb 
# Start time: 18:03:58 on Dec 23,2022
# Loading sv_std.std
# Loading work.valid_ready_tb_sv_unit
# Loading work.valid_ready_tb
# Loading work.valid_ready_if
# Loading work.fifo_valid_ready_wrapper
# Loading work.fifo
# do wave.do
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/sender_A/clk'.
# Executing ONERROR command at macro ./wave.do line 4
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/sender_A/reset_n'.
# Executing ONERROR command at macro ./wave.do line 5
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/sender_A/valid'.
# Executing ONERROR command at macro ./wave.do line 6
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/sender_A/ready'.
# Executing ONERROR command at macro ./wave.do line 7
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/sender_A/data'.
# Executing ONERROR command at macro ./wave.do line 8
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/run_sender_driver/index'.
# Executing ONERROR command at macro ./wave.do line 9
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/run_sender_driver/transaction_tracker'.
# Executing ONERROR command at macro ./wave.do line 10
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/receiver_B/clk'.
# Executing ONERROR command at macro ./wave.do line 12
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/receiver_B/reset_n'.
# Executing ONERROR command at macro ./wave.do line 13
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/receiver_B/valid'.
# Executing ONERROR command at macro ./wave.do line 14
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/receiver_B/ready'.
# Executing ONERROR command at macro ./wave.do line 15
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/receiver_B/data'.
# Executing ONERROR command at macro ./wave.do line 16
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/run_receiver_driver/index'.
# Executing ONERROR command at macro ./wave.do line 17
# ** UI-Msg: (vish-4014) No objects found matching '/fifo_valid_ready_tb/run_receiver_driver/transaction_tracker'.
# Executing ONERROR command at macro ./wave.do line 18
# 
add wave -position insertpoint  \
sim:/valid_ready_tb/sender_A/clk \
sim:/valid_ready_tb/sender_A/reset_n \
sim:/valid_ready_tb/sender_A/valid \
sim:/valid_ready_tb/sender_A/ready \
sim:/valid_ready_tb/sender_A/data
add wave -position insertpoint  \
sim:/valid_ready_tb/receiver_B/clk \
sim:/valid_ready_tb/receiver_B/reset_n \
sim:/valid_ready_tb/receiver_B/valid \
sim:/valid_ready_tb/receiver_B/ready \
sim:/valid_ready_tb/receiver_B/data
run
# Received BUSY_RECEIVER
# ------ Busy Receiver test sequence ------
# sender : valid-> 1 ; data-> b8
# sender : valid-> 1 ; data-> 26
# sender : valid-> 1 ; data-> 66
# sender : valid-> 1 ; data-> b6
# sender : valid-> 1 ; data-> c6
# sender : valid-> 1 ; data-> 46
# sender : valid-> 1 ; data-> 72
# sender : valid-> 1 ; data-> 2e
# sender : valid-> 1 ; data-> 67
# sender : valid-> 1 ; data-> 3a
# sender : valid-> 1 ; data-> 6a
# sender : valid-> 1 ; data-> b4
# sender : valid-> 1 ; data-> 6f
# sender : valid-> 1 ; data-> 56
# sender : valid-> 1 ; data-> 35
# sender : valid-> 1 ; data-> d4
# sender : valid-> 1 ; data-> ae
# sender : valid-> 1 ; data-> 7d
# sender : valid-> 1 ; data-> db
# sender : valid-> 1 ; data-> 05
# sender : valid-> 1 ; data-> e3
# sender : valid-> 1 ; data-> 20
# sender : valid-> 1 ; data-> e5
# sender : valid-> 1 ; data-> 05
# sender : valid-> 1 ; data-> 25
# sender : valid-> 1 ; data-> e9
# sender : valid-> 1 ; data-> 5d
# sender : valid-> 1 ; data-> 8a
# sender : valid-> 1 ; data-> 58
# sender : valid-> 1 ; data-> 8b
# sender : valid-> 1 ; data-> 56
# sender : valid-> 1 ; data-> c9
# sender : valid-> 1 ; data-> b9
# sender : valid-> 1 ; data-> 40
# sender : valid-> 1 ; data-> 80
# sender : valid-> 1 ; data-> 0e
# sender : valid-> 1 ; data-> d4
# sender : valid-> 1 ; data-> 8e
# sender : valid-> 1 ; data-> c0
# sender : valid-> 1 ; data-> 97
# sender : valid-> 1 ; data-> 25
# sender : valid-> 1 ; data-> c7
# sender : valid-> 1 ; data-> 58
# sender : valid-> 1 ; data-> 51
# sender : valid-> 1 ; data-> 32
# sender : valid-> 1 ; data-> 23
# sender : valid-> 1 ; data-> 54
# sender : valid-> 1 ; data-> b3
# sender : valid-> 1 ; data-> 5a
# sender : valid-> 1 ; data-> e6
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# ------ Done ------
# time: 40: sender_A:           0 : sent < b8 >
# time: 50: sender_A:           1 : sent < 26 >
# time: 60: sender_A:           2 : sent < 66 >
# time: 70: sender_A:           3 : sent < b6 >
add wave -position insertpoint  \
sim:/valid_ready_tb/DUT1/fifo_inst/MEM
add wave -position insertpoint  \
sim:/valid_ready_tb/DUT1/fifo_inst/write_ptr \
sim:/valid_ready_tb/DUT1/fifo_inst/read_ptr
restart
# Closing VCD file "valid_ready_tb.vcd"
run
# Received BUSY_RECEIVER
# ------ Busy Receiver test sequence ------
# sender : valid-> 1 ; data-> b8
# sender : valid-> 1 ; data-> 26
# sender : valid-> 1 ; data-> 66
# sender : valid-> 1 ; data-> b6
# sender : valid-> 1 ; data-> c6
# sender : valid-> 1 ; data-> 46
# sender : valid-> 1 ; data-> 72
# sender : valid-> 1 ; data-> 2e
# sender : valid-> 1 ; data-> 67
# sender : valid-> 1 ; data-> 3a
# sender : valid-> 1 ; data-> 6a
# sender : valid-> 1 ; data-> b4
# sender : valid-> 1 ; data-> 6f
# sender : valid-> 1 ; data-> 56
# sender : valid-> 1 ; data-> 35
# sender : valid-> 1 ; data-> d4
# sender : valid-> 1 ; data-> ae
# sender : valid-> 1 ; data-> 7d
# sender : valid-> 1 ; data-> db
# sender : valid-> 1 ; data-> 05
# sender : valid-> 1 ; data-> e3
# sender : valid-> 1 ; data-> 20
# sender : valid-> 1 ; data-> e5
# sender : valid-> 1 ; data-> 05
# sender : valid-> 1 ; data-> 25
# sender : valid-> 1 ; data-> e9
# sender : valid-> 1 ; data-> 5d
# sender : valid-> 1 ; data-> 8a
# sender : valid-> 1 ; data-> 58
# sender : valid-> 1 ; data-> 8b
# sender : valid-> 1 ; data-> 56
# sender : valid-> 1 ; data-> c9
# sender : valid-> 1 ; data-> b9
# sender : valid-> 1 ; data-> 40
# sender : valid-> 1 ; data-> 80
# sender : valid-> 1 ; data-> 0e
# sender : valid-> 1 ; data-> d4
# sender : valid-> 1 ; data-> 8e
# sender : valid-> 1 ; data-> c0
# sender : valid-> 1 ; data-> 97
# sender : valid-> 1 ; data-> 25
# sender : valid-> 1 ; data-> c7
# sender : valid-> 1 ; data-> 58
# sender : valid-> 1 ; data-> 51
# sender : valid-> 1 ; data-> 32
# sender : valid-> 1 ; data-> 23
# sender : valid-> 1 ; data-> 54
# sender : valid-> 1 ; data-> b3
# sender : valid-> 1 ; data-> 5a
# sender : valid-> 1 ; data-> e6
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 0
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# receiver : ready -> 1
# ------ Done ------
# time: 40: sender_A:           0 : sent < b8 >
# time: 50: sender_A:           1 : sent < 26 >
# time: 60: sender_A:           2 : sent < 66 >
# time: 70: sender_A:           3 : sent < b6 >
write format wave -window .main_pane.wave.interior.cs.body.pw.wf /root/RISCV_DEV/RV32I-CPU-CORE/rtl_libraries/fifo/tb/wave.do
# End time: 18:09:32 on Dec 23,2022, Elapsed time: 0:05:34
# Errors: 0, Warnings: 0
